//ts-ignore
import * as GeistFont from "geist/font";
// import { GeistSans } from "geist/font/sans";

import { SidebarInset } from "@repo/ui/components/sidebar";
import { cn } from "@repo/ui/lib/utils";
import { AppHeader } from "@repo/web/components/header/app-header";
import AtomHydratorData from "@repo/web/components/providers/atom-hydrator-data";
import { Providers } from "@repo/web/components/providers/providers";
import { AppSidebar } from "@repo/web/components/sidebar/app-sidebar";
import type { Metadata } from "next";
import { Suspense } from "react";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app"
};

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>{/* <meta http-equiv="Content-Security-Policy" content="default-src 'self'" /> */}</head>
      <body
        id={"root"}
        className={cn(
          "bg-background min-h-svh loading overscroll-none font-sans antialiased",
          // @ts-ignore: Testing invalid input
          GeistFont.GeistSans.className,
          // @ts-ignore: Testing invalid input
          GeistFont.GeistMono.className
        )}
      >
        <Providers>
          <Suspense fallback="Loading...">
            <AtomHydratorData />
            <AppSidebar />
            <SidebarInset>
              <AppHeader />
              {children}
            </SidebarInset>
          </Suspense>
        </Providers>
      </body>
    </html>
  );
}

export const ErrorComponent = () => {
  return <h1>Error</h1>;
};
